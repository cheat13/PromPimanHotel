@startuml

actor User
participant "Web" as A
participant "API" as B
participant "Database" as C

A -> B: แสดงกระดิ่ง ขึ้นเตือนถ้า list การจองใกล้ถึงระยะเวลา 2 วัน 
B -> C: เช็คว่ามีตัวไหนอยู่ในระยะเวลา 2 วัน
C --> B: result 
B --> A: ถ้ามีจะส่ง icon รูปกระดิ่งแจ้งเตือนตรงเมนู Booking
A --> User: เห็นรูปกระดิ่งแจ้งเตือน

User -> A: กดเข้ามา Menu Booking
A -> B: เรียกข้อมูลการจองทั้งหมดมาแสดงเรียงตามวันที่ที่ใกล้ถึงอยู่ด้านบน\n[จะไม่แสดง List เข้าพักวันที่ก่อนเข้าพักวันที่ปัจจุบัน]<<Get>>:Deletion datetime = null
B -> C: ดึงข้อมูล
C --> B: result 
B --> A: ส่งข้อมูลการจองทั้งหมดมาแสดง

User -> A: กดเพิ่มข้อมุลการจอง
A -> A: กรอกข้อมูล
alt [ถ้ากรอกข้อมูลไม่ครบ]
A -> A: แจ้งเตือนกรอกข้อมูลให้ครบ
end
A -> A:  [ข้อมูลกรอกถูกต้องครบถ้วนแล้ว]\nส่ง form ไปหน้าคิดเงิน
A -> A: กรอกข้อมูลหน้าคิดเงิน
A -> B: [กรอกข้อมูลครบ] <<Post>> 
B -> C: เก็บข้อมูล
C -> C: บันทึกข้อมูล

User -> A: กดปุ่มแก้ไข
A ->A
note right
สามารถแก้ไขข้อมูลได้ทั้งฟอร์ม ยกเว้นเงินสำรองจ่าย

**ไม่สามารถแก้ไขเงินสำรองจ่ายได้แต่ให้เพิ่มสถานะเพิ่มเงินสำรองจ่าย
 default เป็น false แต่ถ้าเป็น true จะสามารถกรอกจำนวนเงินได้
end note
alt
A -> B: [ในกรณีไม่กดเลือกเพิ่มเงินสำรองจ่าย] จะทำการอัพเดทข้อมูล <<Put>>:Id 
end
B -> C: Update ข้อมูลที่แก้ไขจาก Id
alt
A -> A: [ในกรณีกดเลือกเพิ่มเงินสำรองจ่าย] จะส่ง form ไปหน้าคิดเงิน
end

User -> A: กดปุ่มยืนยันหน้าคิดเงิน
A -> B: [เงินสำรองจ่ายจะต้อง+เพิ่มเงินสำรองจ่าย]  เปลี่ยนแปลงข้อมูลที่แก้ไข<<Put>>: Id
B -> C: Update ข้อมูลที่แก้ไขจาก Id 

User -> A: กดปุ่มยืนยัน(confirm)
A -> B: จะเป็นการเปลี่ยนแปลงสถานะ จาก false เป็น true ใน list ก้อนนั้น<<Put ID>>
B -> C: มีการ Update สถานะ
C --> B: result
B --> A: ปุ่ม ยืนยัน(confirm) จะไม่สามารถกดได้อีก

User -> A: กด List ข้อมูลการจอง
A -> A: ส่ง form มาที่ modal ยืนยันการจอง
A -> B: กรอกสาเหตุการยกเลิก <<Put>>:ใส่ deletion datetime 


@enduml